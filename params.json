{"name":"Zepto-","tagline":"Zepto源码学习笔记","body":"# Zepto源码阅读学习笔记\r\n\r\n## CSS 选择器的实现\r\n\r\n````javascript\r\n// `$.zepto.qsa` is Zepto's CSS selector implementation which\r\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\r\n  // This method can be overriden in plugins.\r\n  zepto.qsa = function(element, selector){\r\n    var found,\r\n        maybeID = selector[0] == '#',\r\n        maybeClass = !maybeID && selector[0] == '.',\r\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\r\n        isSimple = simpleSelectorRE.test(nameOnly)\r\n    return (element.getElementById && isSimple && maybeID) ? // Safari DocumentFragment doesn't have getElementById\r\n      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\r\n      (element.nodeType !== 1 && element.nodeType !== 9 && element.nodeType !== 11) ? [] :\r\n      slice.call(\r\n        isSimple && !maybeID && element.getElementsByClassName ? // DocumentFragment doesn't have getElementsByClassName/TagName\r\n          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\r\n          element.getElementsByTagName(selector) : // Or a tag\r\n          element.querySelectorAll(selector) // Or it's not simple, and we need to query all\r\n      )\r\n  }\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}